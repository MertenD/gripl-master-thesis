services:
  gripl-frontend:
    build:
      context: ./gripl/gripl-frontend
      dockerfile: Dockerfile
      args:
        API_BASE_URL: ${PROTOCOL:-http}://${DOMAIN:-localhost}:8080
    image: ${DOCKER_REGISTRY_USERNAME:+${DOCKER_REGISTRY_USERNAME}/}gripl-frontend:${DOCKER_IMAGE_TAG:-latest}
    container_name: gripl-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_BASE_URL=${PROTOCOL:-http}://${DOMAIN:-localhost}:8080
    networks:
      - gripl-network

  gripl-backend:
    build:
      context: ./gripl/gripl-backend
      dockerfile: Dockerfile
    image: ${DOCKER_REGISTRY_USERNAME:+${DOCKER_REGISTRY_USERNAME}/}gripl-backend:${DOCKER_IMAGE_TAG:-latest}
    container_name: gripl-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - gripl-postgres
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - PLAYWRIGHT_BROWSERS_PATH=/root/.cache/ms-playwright
      - FRONTEND_BASE_URL=${PROTOCOL:-http}://${DOMAIN:-localhost}:3000
    env_file:
      - ./gripl/gripl-backend/.env
    volumes:
      - playwright-browsers:/root/.cache/ms-playwright
    networks:
      - gripl-network

  gripl-postgres:
    image: postgres:15
    container_name: gripl-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - gripl-postgres-data:/var/lib/postgresql/data
    networks:
      - gripl-network

  pgadmin:
    image: dpage/pgadmin4:7
    container_name: gripl-pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    env_file:
      - .env
    depends_on:
      - gripl-postgres
    volumes:
      - gripl-pgadmin-data:/var/lib/pgadmin
    networks:
      - gripl-network

networks:
  gripl-network:
    driver: bridge

volumes:
  playwright-browsers:
  gripl-postgres-data:
  gripl-pgadmin-data:
